@use "../global" as *;

.p-intro {
  $this: &;

  @include ov-sp {
    height: 66.7rem;
    padding: 0;
    .sticky-wrapper {
      width: calc(100% + 4.4rem);
      height: 100%;
      margin: 0 -2.2rem;
    }
    .sticky-inner {
      height: 100%;
    }
  }

  &--bg {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: auto;
    margin: 0 -1rem;
    background-size: cover;
    background-position: center;
    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgb(0 0 0);
      opacity: 0.3;
      transition: 0.6s;
    }
  }
  &--inner {
    position: relative;
    width: fit-content;
    height: fit-content;
    padding: 0 2.4rem;
    z-index: 1;
    @include ov-sp {
      padding: 0 4.8rem;      
    }
  }
  &--title {
    font-size: 2.6rem;
    font-weight: 700;
    color: #ffffff;
    line-height: 1.56;
  }
  &--desc {
    font-size: 1.6rem;
    margin-top: 1rem;
    color: #ffffff;
  }

  &--bg {
    &.on-mask {
      &::before {
        opacity: 0.6;
      }
      #{$this}--title,
      #{$this}--desc {
        .slide-in {
          animation-name: slideTextY100;
          animation-duration: 0.8s;
          animation-fill-mode: forwards;
          opacity: 0;
        }
        .slide-in_inner {
          animation-name: slideTextY-100;
          animation-duration: 0.8s;
          animation-fill-mode: forwards;
          opacity: 0;
        }
      }
    }
  }
}

/* 上下のアニメーション*/
.downAnime {
  opacity: 0; /* 事前に透過0 にして消しておく*/
}

@keyframes slideTextY100 {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideTextY-100 {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}
